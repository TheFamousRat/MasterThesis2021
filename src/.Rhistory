a <- list(
c(c(66.66665540802988, 0.04591843777214098), c(52.500014249209165, 0.04102571257472055), c(66.66665540802988, 0.045226200122525276), c(60.0, 0.035714357722076734), c(42.857180079556706, 0.036082546919250974), c(52.500014249209165, 0.04123718528681485), c(73.33331081605978, 0.04500006915628271), c(60.0, 0.04102571257472055), c(52.500014249209165, 0.04081639774710886), c(52.49990025553582, 0.04166673923221011), c(73.33333333333334, 0.04433496873048861), c(52.500014249209165, 0.04102571257472055), c(66.66665540802988, 0.04545461523959132), c(60.0, 0.025773270184123214), c(72.0, 0.04901960053864712), c(60.0, 0.04102571257472055), c(60.0, 0.04020107526200069), c(52.500014249209165, 0.04081639774710886), c(78.0, 0.04807691605067349), c(52.49990025553582, 0.04166673923221011), c(51.428590039778356, 0.035353606689360016), c(39.999898672354526, 0.031088156757285035), c(70.9090909090909, 0.0533980503727489), c(66.66666666666667, 0.04477611263123946), c(52.5, 0.041884813420863656), c(60.0, 0.04123718528681485), c(52.5, 0.04232803892406504), c(42.857180079556706, 0.036082546919250974), c(65.45453791776977, 0.054455512593200334), c(60.0, 0.04591843777214098), c(40.0, 0.03174602919304878), c(20.0, 0.015706805032823873), c(52.49990025553582, 0.04166673923221011), c(52.5, 0.04232803892406504), c(42.85714285714286, 0.03684210231594768), c(29.999886006543225, 0.020833409197310568), c(65.99999088050266, 0.05000006839632356), c(52.500014249209165, 0.04123718528681485), c(36.0, 0.026595742530672237), c(0.0, 0.010362771420590451), c(53.33333333333333, 0.044554448740679965), c(45.00002849841834, 0.04040411096447567), c(36.0, 0.026455024327540648), c(60.0, 0.04285713665339464), c(52.5, 0.03883494572563556), c(52.5, 0.03864733731972906), c(40.0, 0.029999995440245095), c(20.0, 0.015706805032823873), c(46.666666666666664, 0.042056068792355294), c(51.42857142857142, 0.03381642015476293), c(40.000050663822734, 0.030456925245403155), c(36.00007295586778, 0.025773270184123214), c(0.0, 0.010752687293375876), c(52.5, 0.037383172259871374), c(50.0, 0.02955664582032574), c(20.0, 0.01587301459652439), c(54.0, 0.046511621330802305), c(60.0, 0.038277506394383605), c(45.0, 0.020202017100462606), c(0.0, 0.010752687293375876), c(60.0, 0.046728965324839215), c(42.0, 0.04629628978087141), c(45.0, 0.037558680085809024), c(51.42857142857142, 0.03414633640003419), c(50.0, 0.029411760323188277), c(36.00007295586778, 0.02564109958839833), c(0.0, 0.011111110172889875), c(54.54545454545455, 0.051643185117987406), c(54.0, 0.046728965324839215), c(52.5, 0.03846153284053879), c(30.0, 0.02116401946203252), c(0.0, 0.010752687293375876), c(42.0, 0.046511621330802305), c(40.0, 0.043269224445606144), c(40.0, 0.029999995440245095), c(48.00003647793389, 0.02564109958839833), c(330.0, 0.011173183408808463), c(0.0, 0.01136363538228409), c(45.0, 0.05714284887119286), c(49.09090909090909, 0.051401861857323136), c(46.666666666666664, 0.04265402229093469), c(50.0, 0.02955664582032574), c(45.0, 0.02116401946203252), c(0.0, 0.011428570435971657), c(46.666666666666664, 0.04285713665339464), c(45.0, 0.038277506394383605), c(50.0, 0.030150749163147497), c(48.00003647793389, 0.02564109958839833), c(0.0, 0.01069518629648065), c(46.15384615384615, 0.062499990865875536), c(40.0, 0.042056068792355294), c(46.666666666666664, 0.04285713665339464), c(51.42857142857142, 0.03482586537985292), c(0.0, 0.005555555086444937), c(20.0, 0.017341038938903673), c(43.63636363636364, 0.052132693911142405), c(40.0, 0.043062194693681555), c(50.000025331911374, 0.030456925245403155), c(44.99982900981484, 0.020833409197310568), c(30.0, 0.01069518629648065), c(30.0, 0.01136363538228409), c(60.0, 0.011560692625935782), c(43.63636363636364, 0.05314008881462746), c(40.0, 0.042452824101430746), c(40.0, 0.043062194693681555), c(45.0, 0.03883494572563556), c(60.0, 0.02551027767201249), c(60.0, 0.005524861414511644), c(40.0, 0.05769229926080819), c(42.85714285714286, 0.034653460131639974), c(44.99982900981484, 0.020833409197310568), c(60.0, 0.011235954096756469), c(0.0, 0.005813952974608438), c(38.18181818181818, 0.052884607655740844), c(40.0, 0.043269224445606144), c(45.0, 0.0392156804309177), c(42.857180079556706, 0.035353606689360016), c(50.000025331911374, 0.030769303917172402), c(40.0, 0.016129030940063814), c(60.0, 0.005747125934760735), c(40.0, 0.058536576685772904), c(40.0, 0.05825241858845334), c(42.0, 0.04807691605067349), c(42.85714285714286, 0.034999994680285945), c(45.0, 0.021052629894827247), c(60.0, 0.0109890100712967), c(60.0, 0.011111110172889875), c(0.0, 0.0057142852179858285), c(60.0, 0.011627905949216876), c(36.92307692307693, 0.062499990865875536), c(36.0, 0.04830917164966133), c(42.857180079556706, 0.0355330665941015), c(60.0, 0.01621621488392835), c(0.0, 0.005617977048378234), c(36.92310390384773, 0.06372555520604058), c(36.92310390384773, 0.06372555520604058), c(38.18181818181818, 0.05392156059251184), c(46.666666666666664, 0.044117640484782415), c(42.85714285714286, 0.034653460131639974), c(51.428590039778356, 0.036082546919250974), c(60.0, 0.01648351510694505), c(60.0, 0.005747125934760735), c(40.0, 0.05797100597959359), c(45.0, 0.0392156804309177), c(42.857180079556706, 0.0355330665941015), c(42.85704980110823, 0.03645840672348522), c(48.0, 0.026455024327540648), c(48.0, 0.026881718233439694), c(90.0, 0.0109890100712967), c(60.0, 0.011627905949216876), c(60.0, 0.011834318462295861), c(38.57145183546248, 0.06965180637753182), c(43.63636363636364, 0.05418718400393052), c(42.85714285714286, 0.03517587402367208), c(51.42857142857142, 0.0366492117432557), c(60.0, 0.021857921681843702), c(60.0, 0.005555555086444937), c(90.0, 0.011235954096756469), c(80.00000000000001, 0.01764705724575945), c(34.285742202554985, 0.0689655817869163), c(42.000027358492005, 0.05050511951470697), c(42.857180079556706, 0.036082546919250974), c(48.0, 0.026315787368534058), c(80.00000000000001, 0.01648351510694505), c(90.0, 0.011428570435971657), c(29.999967430352523, 0.07070713661516959), c(36.92307692307693, 0.06341462474292064), c(35.000031664929324, 0.06000006687640526), c(45.00002849841834, 0.04020107526200069), c(37.500042747627504, 0.04102571257472055), c(45.0, 0.042105259789654494), c(48.0, 0.026881718233439694), c(60.0, 0.005555555086444937), c(80.00000000000001, 0.017241377804282206), c(80.00000000000001, 0.01775147769344379), c(32.000028371783856, 0.0750000645965278), c(32.72722750661855, 0.056410325561042765), c(45.0, 0.041884813420863656), c(50.0, 0.031914891036806683), c(48.0, 0.026595742530672237), c(60.0, 0.02747252517824175), c(75.0, 0.021857921681843702), c(120.0, 0.0108695643195189), c(60.0, 0.017543858089752336), c(27.69234546538682, 0.06500006611644611), c(37.49992875395416, 0.04123718528681485), c(45.0, 0.04232803892406504), c(60.0, 0.0216216198452378), c(80.00000000000001, 0.01648351510694505), c(60.0, 0.023255811898433752), c(29.999967430352523, 0.0714286378973016), c(29.999967430352523, 0.07179493854736498), c(24.999968335070683, 0.06060612806493828), c(44.999914504744986, 0.04166673923221011), c(50.0, 0.03174602919304878), c(60.0, 0.021857921681843702), c(80.00000000000001, 0.01648351510694505), c(100.0, 0.01630434647927835), c(80.00000000000001, 0.01666666525933481), c(60.0, 0.01666666525933481), c(25.714257797445022, 0.07216501549219811), c(27.272689588848788, 0.05670110038950649), c(39.99993244817931, 0.04687507174093499), c(51.42857142857142, 0.037037034058556906), c(51.42857142857142, 0.03723403954294113), c(60.0, 0.026881718233439694), c(80.00000000000001, 0.0326086929585567), c(100.0, 0.01630434647927835), c(75.0, 0.022471908193512937))
)
)
)
View(a)
c(c(66.66665540802988, 0.04591843777214098), c(52.500014249209165, 0.04102571257472055), c(66.66665540802988, 0.045226200122525276), c(60.0, 0.035714357722076734), c(42.857180079556706, 0.036082546919250974), c(52.500014249209165, 0.04123718528681485), c(73.33331081605978, 0.04500006915628271), c(60.0, 0.04102571257472055), c(52.500014249209165, 0.04081639774710886), c(52.49990025553582, 0.04166673923221011), c(73.33333333333334, 0.04433496873048861), c(52.500014249209165, 0.04102571257472055), c(66.66665540802988, 0.04545461523959132), c(60.0, 0.025773270184123214), c(72.0, 0.04901960053864712), c(60.0, 0.04102571257472055), c(60.0, 0.04020107526200069), c(52.500014249209165, 0.04081639774710886), c(78.0, 0.04807691605067349), c(52.49990025553582, 0.04166673923221011), c(51.428590039778356, 0.035353606689360016), c(39.999898672354526, 0.031088156757285035), c(70.9090909090909, 0.0533980503727489), c(66.66666666666667, 0.04477611263123946), c(52.5, 0.041884813420863656), c(60.0, 0.04123718528681485), c(52.5, 0.04232803892406504), c(42.857180079556706, 0.036082546919250974), c(65.45453791776977, 0.054455512593200334), c(60.0, 0.04591843777214098), c(40.0, 0.03174602919304878), c(20.0, 0.015706805032823873), c(52.49990025553582, 0.04166673923221011), c(52.5, 0.04232803892406504), c(42.85714285714286, 0.03684210231594768), c(29.999886006543225, 0.020833409197310568), c(65.99999088050266, 0.05000006839632356), c(52.500014249209165, 0.04123718528681485), c(36.0, 0.026595742530672237), c(0.0, 0.010362771420590451), c(53.33333333333333, 0.044554448740679965), c(45.00002849841834, 0.04040411096447567), c(36.0, 0.026455024327540648), c(60.0, 0.04285713665339464), c(52.5, 0.03883494572563556), c(52.5, 0.03864733731972906), c(40.0, 0.029999995440245095), c(20.0, 0.015706805032823873), c(46.666666666666664, 0.042056068792355294), c(51.42857142857142, 0.03381642015476293), c(40.000050663822734, 0.030456925245403155), c(36.00007295586778, 0.025773270184123214), c(0.0, 0.010752687293375876), c(52.5, 0.037383172259871374), c(50.0, 0.02955664582032574), c(20.0, 0.01587301459652439), c(54.0, 0.046511621330802305), c(60.0, 0.038277506394383605), c(45.0, 0.020202017100462606), c(0.0, 0.010752687293375876), c(60.0, 0.046728965324839215), c(42.0, 0.04629628978087141), c(45.0, 0.037558680085809024), c(51.42857142857142, 0.03414633640003419), c(50.0, 0.029411760323188277), c(36.00007295586778, 0.02564109958839833), c(0.0, 0.011111110172889875), c(54.54545454545455, 0.051643185117987406), c(54.0, 0.046728965324839215), c(52.5, 0.03846153284053879), c(30.0, 0.02116401946203252), c(0.0, 0.010752687293375876), c(42.0, 0.046511621330802305), c(40.0, 0.043269224445606144), c(40.0, 0.029999995440245095), c(48.00003647793389, 0.02564109958839833), c(330.0, 0.011173183408808463), c(0.0, 0.01136363538228409), c(45.0, 0.05714284887119286), c(49.09090909090909, 0.051401861857323136), c(46.666666666666664, 0.04265402229093469), c(50.0, 0.02955664582032574), c(45.0, 0.02116401946203252), c(0.0, 0.011428570435971657), c(46.666666666666664, 0.04285713665339464), c(45.0, 0.038277506394383605), c(50.0, 0.030150749163147497), c(48.00003647793389, 0.02564109958839833), c(0.0, 0.01069518629648065), c(46.15384615384615, 0.062499990865875536), c(40.0, 0.042056068792355294), c(46.666666666666664, 0.04285713665339464), c(51.42857142857142, 0.03482586537985292), c(0.0, 0.005555555086444937), c(20.0, 0.017341038938903673), c(43.63636363636364, 0.052132693911142405), c(40.0, 0.043062194693681555), c(50.000025331911374, 0.030456925245403155), c(44.99982900981484, 0.020833409197310568), c(30.0, 0.01069518629648065), c(30.0, 0.01136363538228409), c(60.0, 0.011560692625935782), c(43.63636363636364, 0.05314008881462746), c(40.0, 0.042452824101430746), c(40.0, 0.043062194693681555), c(45.0, 0.03883494572563556), c(60.0, 0.02551027767201249), c(60.0, 0.005524861414511644), c(40.0, 0.05769229926080819), c(42.85714285714286, 0.034653460131639974), c(44.99982900981484, 0.020833409197310568), c(60.0, 0.011235954096756469), c(0.0, 0.005813952974608438), c(38.18181818181818, 0.052884607655740844), c(40.0, 0.043269224445606144), c(45.0, 0.0392156804309177), c(42.857180079556706, 0.035353606689360016), c(50.000025331911374, 0.030769303917172402), c(40.0, 0.016129030940063814), c(60.0, 0.005747125934760735), c(40.0, 0.058536576685772904), c(40.0, 0.05825241858845334), c(42.0, 0.04807691605067349), c(42.85714285714286, 0.034999994680285945), c(45.0, 0.021052629894827247), c(60.0, 0.0109890100712967), c(60.0, 0.011111110172889875), c(0.0, 0.0057142852179858285), c(60.0, 0.011627905949216876), c(36.92307692307693, 0.062499990865875536), c(36.0, 0.04830917164966133), c(42.857180079556706, 0.0355330665941015), c(60.0, 0.01621621488392835), c(0.0, 0.005617977048378234), c(36.92310390384773, 0.06372555520604058), c(36.92310390384773, 0.06372555520604058), c(38.18181818181818, 0.05392156059251184), c(46.666666666666664, 0.044117640484782415), c(42.85714285714286, 0.034653460131639974), c(51.428590039778356, 0.036082546919250974), c(60.0, 0.01648351510694505), c(60.0, 0.005747125934760735), c(40.0, 0.05797100597959359), c(45.0, 0.0392156804309177), c(42.857180079556706, 0.0355330665941015), c(42.85704980110823, 0.03645840672348522), c(48.0, 0.026455024327540648), c(48.0, 0.026881718233439694), c(90.0, 0.0109890100712967), c(60.0, 0.011627905949216876), c(60.0, 0.011834318462295861), c(38.57145183546248, 0.06965180637753182), c(43.63636363636364, 0.05418718400393052), c(42.85714285714286, 0.03517587402367208), c(51.42857142857142, 0.0366492117432557), c(60.0, 0.021857921681843702), c(60.0, 0.005555555086444937), c(90.0, 0.011235954096756469), c(80.00000000000001, 0.01764705724575945), c(34.285742202554985, 0.0689655817869163), c(42.000027358492005, 0.05050511951470697), c(42.857180079556706, 0.036082546919250974), c(48.0, 0.026315787368534058), c(80.00000000000001, 0.01648351510694505), c(90.0, 0.011428570435971657), c(29.999967430352523, 0.07070713661516959), c(36.92307692307693, 0.06341462474292064), c(35.000031664929324, 0.06000006687640526), c(45.00002849841834, 0.04020107526200069), c(37.500042747627504, 0.04102571257472055), c(45.0, 0.042105259789654494), c(48.0, 0.026881718233439694), c(60.0, 0.005555555086444937), c(80.00000000000001, 0.017241377804282206), c(80.00000000000001, 0.01775147769344379), c(32.000028371783856, 0.0750000645965278), c(32.72722750661855, 0.056410325561042765), c(45.0, 0.041884813420863656), c(50.0, 0.031914891036806683), c(48.0, 0.026595742530672237), c(60.0, 0.02747252517824175), c(75.0, 0.021857921681843702), c(120.0, 0.0108695643195189), c(60.0, 0.017543858089752336), c(27.69234546538682, 0.06500006611644611), c(37.49992875395416, 0.04123718528681485), c(45.0, 0.04232803892406504), c(60.0, 0.0216216198452378), c(80.00000000000001, 0.01648351510694505), c(60.0, 0.023255811898433752), c(29.999967430352523, 0.0714286378973016), c(29.999967430352523, 0.07179493854736498), c(24.999968335070683, 0.06060612806493828), c(44.999914504744986, 0.04166673923221011), c(50.0, 0.03174602919304878), c(60.0, 0.021857921681843702), c(80.00000000000001, 0.01648351510694505), c(100.0, 0.01630434647927835), c(80.00000000000001, 0.01666666525933481), c(60.0, 0.01666666525933481), c(25.714257797445022, 0.07216501549219811), c(27.272689588848788, 0.05670110038950649), c(39.99993244817931, 0.04687507174093499), c(51.42857142857142, 0.037037034058556906), c(51.42857142857142, 0.03723403954294113), c(60.0, 0.026881718233439694), c(80.00000000000001, 0.0326086929585567), c(100.0, 0.01630434647927835), c(75.0, 0.022471908193512937))
)
)
c(c(66.66665540802988, 0.04591843777214098), c(52.500014249209165, 0.04102571257472055), c(66.66665540802988, 0.045226200122525276), c(60.0, 0.035714357722076734), c(42.857180079556706, 0.036082546919250974), c(52.500014249209165, 0.04123718528681485), c(73.33331081605978, 0.04500006915628271), c(60.0, 0.04102571257472055), c(52.500014249209165, 0.04081639774710886), c(52.49990025553582, 0.04166673923221011), c(73.33333333333334, 0.04433496873048861), c(52.500014249209165, 0.04102571257472055), c(66.66665540802988, 0.04545461523959132), c(60.0, 0.025773270184123214), c(72.0, 0.04901960053864712), c(60.0, 0.04102571257472055), c(60.0, 0.04020107526200069), c(52.500014249209165, 0.04081639774710886), c(78.0, 0.04807691605067349), c(52.49990025553582, 0.04166673923221011), c(51.428590039778356, 0.035353606689360016), c(39.999898672354526, 0.031088156757285035), c(70.9090909090909, 0.0533980503727489), c(66.66666666666667, 0.04477611263123946), c(52.5, 0.041884813420863656), c(60.0, 0.04123718528681485), c(52.5, 0.04232803892406504), c(42.857180079556706, 0.036082546919250974), c(65.45453791776977, 0.054455512593200334), c(60.0, 0.04591843777214098), c(40.0, 0.03174602919304878), c(20.0, 0.015706805032823873), c(52.49990025553582, 0.04166673923221011), c(52.5, 0.04232803892406504), c(42.85714285714286, 0.03684210231594768), c(29.999886006543225, 0.020833409197310568), c(65.99999088050266, 0.05000006839632356), c(52.500014249209165, 0.04123718528681485), c(36.0, 0.026595742530672237), c(0.0, 0.010362771420590451), c(53.33333333333333, 0.044554448740679965), c(45.00002849841834, 0.04040411096447567), c(36.0, 0.026455024327540648), c(60.0, 0.04285713665339464), c(52.5, 0.03883494572563556), c(52.5, 0.03864733731972906), c(40.0, 0.029999995440245095), c(20.0, 0.015706805032823873), c(46.666666666666664, 0.042056068792355294), c(51.42857142857142, 0.03381642015476293), c(40.000050663822734, 0.030456925245403155), c(36.00007295586778, 0.025773270184123214), c(0.0, 0.010752687293375876), c(52.5, 0.037383172259871374), c(50.0, 0.02955664582032574), c(20.0, 0.01587301459652439), c(54.0, 0.046511621330802305), c(60.0, 0.038277506394383605), c(45.0, 0.020202017100462606), c(0.0, 0.010752687293375876), c(60.0, 0.046728965324839215), c(42.0, 0.04629628978087141), c(45.0, 0.037558680085809024), c(51.42857142857142, 0.03414633640003419), c(50.0, 0.029411760323188277), c(36.00007295586778, 0.02564109958839833), c(0.0, 0.011111110172889875), c(54.54545454545455, 0.051643185117987406), c(54.0, 0.046728965324839215), c(52.5, 0.03846153284053879), c(30.0, 0.02116401946203252), c(0.0, 0.010752687293375876), c(42.0, 0.046511621330802305), c(40.0, 0.043269224445606144), c(40.0, 0.029999995440245095), c(48.00003647793389, 0.02564109958839833), c(330.0, 0.011173183408808463), c(0.0, 0.01136363538228409), c(45.0, 0.05714284887119286), c(49.09090909090909, 0.051401861857323136), c(46.666666666666664, 0.04265402229093469), c(50.0, 0.02955664582032574), c(45.0, 0.02116401946203252), c(0.0, 0.011428570435971657), c(46.666666666666664, 0.04285713665339464), c(45.0, 0.038277506394383605), c(50.0, 0.030150749163147497), c(48.00003647793389, 0.02564109958839833), c(0.0, 0.01069518629648065), c(46.15384615384615, 0.062499990865875536), c(40.0, 0.042056068792355294), c(46.666666666666664, 0.04285713665339464), c(51.42857142857142, 0.03482586537985292), c(0.0, 0.005555555086444937), c(20.0, 0.017341038938903673), c(43.63636363636364, 0.052132693911142405), c(40.0, 0.043062194693681555), c(50.000025331911374, 0.030456925245403155), c(44.99982900981484, 0.020833409197310568), c(30.0, 0.01069518629648065), c(30.0, 0.01136363538228409), c(60.0, 0.011560692625935782), c(43.63636363636364, 0.05314008881462746), c(40.0, 0.042452824101430746), c(40.0, 0.043062194693681555), c(45.0, 0.03883494572563556), c(60.0, 0.02551027767201249), c(60.0, 0.005524861414511644), c(40.0, 0.05769229926080819), c(42.85714285714286, 0.034653460131639974), c(44.99982900981484, 0.020833409197310568), c(60.0, 0.011235954096756469), c(0.0, 0.005813952974608438), c(38.18181818181818, 0.052884607655740844), c(40.0, 0.043269224445606144), c(45.0, 0.0392156804309177), c(42.857180079556706, 0.035353606689360016), c(50.000025331911374, 0.030769303917172402), c(40.0, 0.016129030940063814), c(60.0, 0.005747125934760735), c(40.0, 0.058536576685772904), c(40.0, 0.05825241858845334), c(42.0, 0.04807691605067349), c(42.85714285714286, 0.034999994680285945), c(45.0, 0.021052629894827247), c(60.0, 0.0109890100712967), c(60.0, 0.011111110172889875), c(0.0, 0.0057142852179858285), c(60.0, 0.011627905949216876), c(36.92307692307693, 0.062499990865875536), c(36.0, 0.04830917164966133), c(42.857180079556706, 0.0355330665941015), c(60.0, 0.01621621488392835), c(0.0, 0.005617977048378234), c(36.92310390384773, 0.06372555520604058), c(36.92310390384773, 0.06372555520604058), c(38.18181818181818, 0.05392156059251184), c(46.666666666666664, 0.044117640484782415), c(42.85714285714286, 0.034653460131639974), c(51.428590039778356, 0.036082546919250974), c(60.0, 0.01648351510694505), c(60.0, 0.005747125934760735), c(40.0, 0.05797100597959359), c(45.0, 0.0392156804309177), c(42.857180079556706, 0.0355330665941015), c(42.85704980110823, 0.03645840672348522), c(48.0, 0.026455024327540648), c(48.0, 0.026881718233439694), c(90.0, 0.0109890100712967), c(60.0, 0.011627905949216876), c(60.0, 0.011834318462295861), c(38.57145183546248, 0.06965180637753182), c(43.63636363636364, 0.05418718400393052), c(42.85714285714286, 0.03517587402367208), c(51.42857142857142, 0.0366492117432557), c(60.0, 0.021857921681843702), c(60.0, 0.005555555086444937), c(90.0, 0.011235954096756469), c(80.00000000000001, 0.01764705724575945), c(34.285742202554985, 0.0689655817869163), c(42.000027358492005, 0.05050511951470697), c(42.857180079556706, 0.036082546919250974), c(48.0, 0.026315787368534058), c(80.00000000000001, 0.01648351510694505), c(90.0, 0.011428570435971657), c(29.999967430352523, 0.07070713661516959), c(36.92307692307693, 0.06341462474292064), c(35.000031664929324, 0.06000006687640526), c(45.00002849841834, 0.04020107526200069), c(37.500042747627504, 0.04102571257472055), c(45.0, 0.042105259789654494), c(48.0, 0.026881718233439694), c(60.0, 0.005555555086444937), c(80.00000000000001, 0.017241377804282206), c(80.00000000000001, 0.01775147769344379), c(32.000028371783856, 0.0750000645965278), c(32.72722750661855, 0.056410325561042765), c(45.0, 0.041884813420863656), c(50.0, 0.031914891036806683), c(48.0, 0.026595742530672237), c(60.0, 0.02747252517824175), c(75.0, 0.021857921681843702), c(120.0, 0.0108695643195189), c(60.0, 0.017543858089752336), c(27.69234546538682, 0.06500006611644611), c(37.49992875395416, 0.04123718528681485), c(45.0, 0.04232803892406504), c(60.0, 0.0216216198452378), c(80.00000000000001, 0.01648351510694505), c(60.0, 0.023255811898433752), c(29.999967430352523, 0.0714286378973016), c(29.999967430352523, 0.07179493854736498), c(24.999968335070683, 0.06060612806493828), c(44.999914504744986, 0.04166673923221011), c(50.0, 0.03174602919304878), c(60.0, 0.021857921681843702), c(80.00000000000001, 0.01648351510694505), c(100.0, 0.01630434647927835), c(80.00000000000001, 0.01666666525933481), c(60.0, 0.01666666525933481), c(25.714257797445022, 0.07216501549219811), c(27.272689588848788, 0.05670110038950649), c(39.99993244817931, 0.04687507174093499), c(51.42857142857142, 0.037037034058556906), c(51.42857142857142, 0.03723403954294113), c(60.0, 0.026881718233439694), c(80.00000000000001, 0.0326086929585567), c(100.0, 0.01630434647927835), c(75.0, 0.022471908193512937))
c(c(142.5, 0.038277506394383605), c(150.0, 0.03960395443615997), c(146.66666666666669, 0.04225351509653515), c(146.66672295985057, 0.045226200122525276), c(150.0, 0.03846153284053879), c(150.0, 0.03720929706464184), c(150.0, 0.03636363133911298), c(153.33327704014943, 0.04687507174093499), c(146.66666666666669, 0.0403587388930946), c(140.0, 0.04090908525650211), c(146.66666666666669, 0.04390243251432968), c(132.0, 0.04464285108450922), c(144.0, 0.04901960053864712), c(133.33333333333334, 0.0407239762989026), c(140.0, 0.039999994595845946), c(126.66666666666667, 0.0403587388930946), c(150.0, 0.042105259789654494), c(126.66666666666667, 0.0401785659760583), c(146.66666666666669, 0.039999994595845946), c(126.66666666666667, 0.03964757178316484), c(138.0, 0.04739335810103855), c(127.5, 0.036199090043468975), c(142.4999572523725, 0.04123718528681485), c(120.0, 0.035714280867607376), c(145.7142857142857, 0.03910614193082962), c(133.33333333333334, 0.039999994595845946), c(146.66666666666669, 0.043269224445606144), c(133.33333333333334, 0.03982300349312203), c(145.7142857142857, 0.0386740299015815), c(128.57142857142856, 0.0315315272139322), c(140.0, 0.03982300349312203), c(126.66666666666667, 0.03964757178316484), c(120.0, 0.035714280867607376), c(136.36363636363635, 0.050228303530326084))
c(c(142.5, 0.038277506394383605), c(150.0, 0.03960395443615997), c(146.66666666666669, 0.04225351509653515), c(146.66672295985057, 0.045226200122525276), c(150.0, 0.03846153284053879), c(150.0, 0.03720929706464184), c(150.0, 0.03636363133911298), c(153.33327704014943, 0.04687507174093499), c(146.66666666666669, 0.0403587388930946), c(140.0, 0.04090908525650211), c(146.66666666666669, 0.04390243251432968), c(132.0, 0.04464285108450922), c(144.0, 0.04901960053864712), c(133.33333333333334, 0.0407239762989026), c(140.0, 0.039999994595845946), c(126.66666666666667, 0.0403587388930946), c(150.0, 0.042105259789654494), c(126.66666666666667, 0.0401785659760583), c(146.66666666666669, 0.039999994595845946), c(126.66666666666667, 0.03964757178316484), c(138.0, 0.04739335810103855), c(127.5, 0.036199090043468975), c(142.4999572523725, 0.04123718528681485), c(120.0, 0.035714280867607376), c(145.7142857142857, 0.03910614193082962), c(133.33333333333334, 0.039999994595845946), c(146.66666666666669, 0.043269224445606144), c(133.33333333333334, 0.03982300349312203), c(145.7142857142857, 0.0386740299015815), c(128.57142857142856, 0.0315315272139322), c(140.0, 0.03982300349312203), c(126.66666666666667, 0.03964757178316484), c(120.0, 0.035714280867607376), c(136.36363636363635, 0.050228303530326084))
c(c(142.5, 0.038277506394383605), c(150.0, 0.03960395443615997), c(146.66666666666669, 0.04225351509653515), c(146.66672295985057, 0.045226200122525276), c(150.0, 0.03846153284053879), c(150.0, 0.03720929706464184), c(150.0, 0.03636363133911298), c(153.33327704014943, 0.04687507174093499), c(146.66666666666669, 0.0403587388930946), c(140.0, 0.04090908525650211), c(146.66666666666669, 0.04390243251432968), c(132.0, 0.04464285108450922), c(144.0, 0.04901960053864712), c(133.33333333333334, 0.0407239762989026), c(140.0, 0.039999994595845946), c(126.66666666666667, 0.0403587388930946), c(150.0, 0.042105259789654494), c(126.66666666666667, 0.0401785659760583), c(146.66666666666669, 0.039999994595845946), c(126.66666666666667, 0.03964757178316484), c(138.0, 0.04739335810103855), c(127.5, 0.036199090043468975), c(142.4999572523725, 0.04123718528681485), c(120.0, 0.035714280867607376), c(145.7142857142857, 0.03910614193082962), c(133.33333333333334, 0.039999994595845946), c(146.66666666666669, 0.043269224445606144), c(133.33333333333334, 0.03982300349312203), c(145.7142857142857, 0.0386740299015815), c(128.57142857142856, 0.0315315272139322), c(140.0, 0.03982300349312203), c(126.66666666666667, 0.03964757178316484), c(120.0, 0.035714280867607376), c(136.36363636363635, 0.050228303530326084))
library(readr)
facePixels <- read_csv("/home/home/thefamousrat/../facePixels.csv")
View(facePixels)
library("readr")
read_csv("/home/home/thefamousrat/facePixels.csv")
library("readr")
data <- read_csv("/home/home/thefamousrat/facePixels.csv")
View(data)
library("readr")
data <- read_csv("/home/home/thefamousrat/facePixels.csv")
View(data)
library("readr")
data <- read_csv("/home/home/thefamousrat/facePixels.csv")
data
library("readr")
data <- read_csv("/home/home/thefamousrat/facePixels.csv")
library("readr")
data <- read_csv("/home/home/thefamousrat/facePixels.csv")
View(data)
faceColorData$faceIdx
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$faceIdx
faceColorData$faceIdx == 1
which(faceColorData$faceIdx == 1)
plotFaceColorData(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
plot(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
plotFaceColorData(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
plot(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
plot(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
plot(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
plotFaceColorData(faceColorData, 0, "red")
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 0, "red")
hsv(1,1,1)
for (i in 1:10) {
}
loopMax = 10
for (i in 1:loopMax) {
plotFaceColorData(faceColorData, i, hsv(i/loopMax))
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMax = 10
for (i in 1:loopMax) {
plotFaceColorData(faceColorData, i, hsv(i/loopMax))
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMax = 100
for (i in 1:loopMax) {
plotFaceColorData(faceColorData, i, hsv(i/loopMax))
}
for (i in 1:loopMax) {
print(i)
plotFaceColorData(faceColorData, i, hsv(i/loopMax))
}
plotFaceColorData(faceColorData, 10, hsv(10/loopMax))
plotFaceColorData(faceColorData, 100, hsv(100/loopMax)
)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
faceRows <- which(data$faceIdx == 1)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
faceRows <- which(faceColorData$faceIdx == 1)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
faceRows <- which(faceColorData$faceIdx == 1)
lines(faceColorData$H[faceRows], faceColorData$S[faceRows], type = "p", col = color)
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
faceRows <- which(data$faceIdx == 1)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
faceRows <- which(data$faceIdx == 10)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
View(data)
table(data$faceIdx)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
View(faceColorData)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMax = 10
for (i in 1:loopMax) {
plotFaceColorData(faceColorData, i, hsv(i/loopMax))
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMax = 50
for (i in 1:loopMax) {
plotFaceColorData(faceColorData, i, hsv(i/loopMax))
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMin = 10
loopMax = 50
for (i in loopMin:loopMax) {
plotFaceColorData(faceColorData, i, hsv(i/(loopMax - loopMin)))
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMin = 10
loopMax = 50
for (i in loopMin:loopMax) {
plotFaceColorData(faceColorData, i, hsv(h=i/(loopMax - loopMin)))
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMin = 10
loopMax = 50
for (i in loopMin:loopMax) {
print(i/(loopMax - loopMin))
plotFaceColorData(faceColorData, i, hsv(h=i/(loopMax - loopMin)))
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMin = 10
loopMax = 50
for (i in loopMin:loopMax) {
print(i/(loopMax - loopMin))
plotFaceColorData(faceColorData, i, hsv((i - loopMin)/(loopMax - loopMin)))
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx, color) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = color)
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
loopMin = 10
loopMax = 50
for (i in loopMin:loopMax) {
plotFaceColorData(faceColorData, i, hsv((i - loopMin)/(loopMax - loopMin)))
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 5, hsv(5/100))
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 5)
plotFaceColorData(faceColorData, 50)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 5)
plotFaceColorData(faceColorData, 50)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 5)
plotFaceColorData(faceColorData, 10)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 50)
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 20)
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 20)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 20)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 30)
table(faceColorData$faceIdx)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 40)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 50)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 60)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 70)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 80)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 90)
plotFaceColorData(faceColorData, 95)
plotFaceColorData(faceColorData, 50)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 50)
plotFaceColorData(faceColorData, 95)
plotFaceColorData(faceColorData, 1)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 1)
plotFaceColorData(faceColorData, 50)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in 1:99:5) {
plotFaceColorData(faceColorData, i)
}
1:99:5
1:5:99
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,99,5)) {
plotFaceColorData(faceColorData, i)
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,99,10)) {
plotFaceColorData(faceColorData, i)
}
