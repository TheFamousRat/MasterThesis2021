}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
face1Idx <- 1000
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
face1Data <- faceColorData[face1RowsIdx,]
face2Data <- faceColorData[face2RowsIdx,]
lapply(face1RowsIdx, print)
sapply(face1RowsIdx, print)
sapply(face1RowsIdx, function(a) {print(a)})
sapply(face1RowsIdx, function(a) {print(faceColorData[a,])})
sapply(face1RowsIdx, function(face1Idx) {print(faceColorData[face1Idx,])})
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
face1Idx <- 1000
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
sapply(face1RowsIdx, function(face1Idx) {print(faceColorData[face1Idx,])})
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
face1Idx <- 1000
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
sapply(face1RowsIdx, function(face1Idx) {print(faceColorData[face1Idx,])})
sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[2095,]
distFunc(face1Data, face2Data)
})
min(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[2095,]
distFunc(face1Data, face2Data)
}))
unlist(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[2095,]
distFunc(face1Data, face2Data)
}))
min(unlist(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[2095,]
distFunc(face1Data, face2Data)
})))
sapply(face2RowsIdx, function (face2Idx) {
min(unlist(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[face2Idx,]
distFunc(face1Data, face2Data)
})))
})
sapply(face1RowsIdx, function (face1Idx) {
min(unlist(sapply(face2RowsIdx, function(face2Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[face2Idx,]
distFunc(face1Data, face2Data)
})))
})
mean(sapply(face1RowsIdx, function (face1Idx) {
min(unlist(sapply(face2RowsIdx, function(face2Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[face2Idx,]
distFunc(face1Data, face2Data)
})))
}))
mean(sapply(face2RowsIdx, function (face2Idx) {
min(unlist(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[face2Idx,]
distFunc(face1Data, face2Data)
})))
}))
plot(projectedColorData$proj1, projectedColorData$proj2)
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900))
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900, type = 'l'))
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "l")
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "l")
?plot
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "s")
?plot
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "S")
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "p")
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-1,1), ylim = c(-1,1))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 1)
plot(NULL, xlim = c(-1,1), ylim = c(-1,1))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 1)
plot(NULL, xlim = c(-1,1), ylim = c(-1,1))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 99)
View(projectedColorData)
View(faceColorData)
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-1,1), ylim = c(-1,1))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 9900)
View(faceColorData)
View(projectedColorData)
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
View(faceColorData)
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- (faceColorData$H/255.0 * (pi/180))
View(faceColorData)
plot(density(faceColorData$H))
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plot(density(faceColorData$H))
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- (faceColorData$H/255.0 * (2*pi)
plot(density(faceColorData$H))
plot(density(faceColorData$H))
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- (faceColorData$H/255.0) * (2*pi)
plot(density(faceColorData$H))
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- (faceColorData$H/255.0) * (2*pi)
faceColorData$S <- (faceColorData$S/255.0)
plot(density(faceColorData$S))
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- (faceColorData$H/255.0) * (2*pi)
faceColorData$S <- (faceColorData$S/255.0)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-1,1), ylim = c(-1,1))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 9900)
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- (faceColorData$H/255.0) * (2*pi)
faceColorData$S <- (faceColorData$S/255.0)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 9900)
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 100)
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
View(faceColorData)
plot(density(faceColorData$H))
plot(density(faceColorData$S))
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (2*pi)
View(faceColorData)
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (2*pi)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 100)
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,10000,100)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,100000,100)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,990000,1000)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,99000,1000)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,99000,100)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,99000,200)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,99000,500)) {
plotFaceColorData(projectedColorData, i)
}
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (2*pi)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,99000,500)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,99000,1000)) {
plotFaceColorData(projectedColorData, i)
}
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
View(faceColorData)
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
View(faceColorData)
plot(density(faceColorData$H))
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (2*pi)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,100,1)) {
plotFaceColorData(projectedColorData, i)
}
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (2*pi)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-1,1), ylim = c(-1,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,90,5)) {
plotFaceColorData(projectedColorData, i)
}
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (2*pi)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plot(NULL, xlim = c(-0.5,1), ylim = c(-0.5,1), xlab = "Xproj", ylab = "Yproj")
for (i in seq(0,90,5)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-0.5,1), ylim = c(-0.5,1), xlab = "Xproj", ylab = "Yproj")
abline(b = 0)
plot(NULL, xlim = c(-0.5,1), ylim = c(-0.5,1), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
plot(NULL, xlim = c(-0.5,1), ylim = c(-0.5,1), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
abline(a = Inf, b = 0)
plot(NULL, xlim = c(-0.5,1), ylim = c(-0.5,1), xlab = "Xproj", ylab = "Yproj")
axis(1)
plot(NULL, xlim = c(-0.5,1), ylim = c(-0.5,1), xlab = "Xproj", ylab = "Yproj")
axis(3)
plot(NULL, xlim = c(-0.5,1), ylim = c(-0.5,1), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
for (i in seq(0,90,5)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-0.5,0.5), ylim = c(-0.5,1), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
for (i in seq(0,90,5)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-0.5,0.5), ylim = c(-0.5,0.7), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
for (i in seq(0,90,5)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-0.5,0.5), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
for (i in seq(0,90,5)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
for (i in seq(0,90,5)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
for (i in seq(0,90,10)) {
plotFaceColorData(projectedColorData, i)
}
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 1)
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 2)
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 5)
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
plotFaceColorData(projectedColorData, 0)
plotFaceColorData(projectedColorData, 6)
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
plotFaceColorData(projectedColorData, 5)
plotFaceColorData(projectedColorData, 6)
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
plotFaceColorData(projectedColorData, 5)
plotFaceColorData(projectedColorData, 60)
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
plotFaceColorData(projectedColorData, 5)
plotFaceColorData(projectedColorData, 100)
plot(NULL, xlim = c(-0.4,0.4), ylim = c(-0.5,0.5), xlab = "Xproj", ylab = "Yproj")
abline(a = 0, b = 0)
lines(c(0,0),c(-10000,10000))
plotFaceColorData(projectedColorData, 5)
plotFaceColorData(projectedColorData, 90)
