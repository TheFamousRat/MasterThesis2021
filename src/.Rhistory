plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 5)
plotFaceColorData(faceColorData, 50)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 5)
plotFaceColorData(faceColorData, 50)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 5)
plotFaceColorData(faceColorData, 10)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 50)
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 20)
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 20)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 20)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 30)
table(faceColorData$faceIdx)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 40)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 50)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 60)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 70)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 80)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plotFaceColorData(faceColorData, 90)
plotFaceColorData(faceColorData, 95)
plotFaceColorData(faceColorData, 50)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 50)
plotFaceColorData(faceColorData, 95)
plotFaceColorData(faceColorData, 1)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 1)
plotFaceColorData(faceColorData, 50)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in 1:99:5) {
plotFaceColorData(faceColorData, i)
}
1:99:5
1:5:99
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,99,5)) {
plotFaceColorData(faceColorData, i)
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,99,10)) {
plotFaceColorData(faceColorData, i)
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,99,10)) {
plotFaceColorData(faceColorData, i)
}
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 0)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 5)
plotFaceColorData(faceColorData, 15)
plotFaceColorData(faceColorData, 25)
plotFaceColorData(faceColorData, 35)
View(faceColorData)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,360), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 35)
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 35)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 35)
plotFaceColorData(faceColorData, 10)
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * power(faceColorData$S, 0.1)
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(faceColorData, 10)
faceColorData$S, 0.1
faceColorData$S
plot(density(faceColorData$S))
plot(density(power(faceColorData$S, 0.1)))
a**2
a^2
1^2
2**2
plot(density(power(faceColorData$S, 0.1)))
plot(density(faceColorData$S**0.1))
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.1
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,99,2)) {
plotFaceColorData(faceColorData, i)
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.01
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,99,2)) {
plotFaceColorData(faceColorData, i)
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.01
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,9900,100)) {
plotFaceColorData(faceColorData, i)
}
x <- seq(0.0,1.0,0.01)
x <- seq(0.0,1.0,0.01)
plot(x, x**0.1)
x <- seq(0.0,1.0,0.1)
plot(x, x**0.1)
x <- seq(0.0,1.0,0.01)
plot(x, x**0.01)
x <- seq(0.0,1.0,0.01)
plot(x, x**0.5)
x <- seq(0.0,1.0,0.001)
plot(x, x**0.5)
x <- seq(0.0,1.0,0.001)
plot(x, x**0.5, type = "l")
x <- seq(0.0,1.0,0.005)
plot(x, x**0.5, type = "l")
x <- seq(0.0,1.0,0.005)
plot(x, x**0.2, type = "l")
x <- seq(0.0,1.0,0.005)
plot(x, x**0.1, type = "l")
x <- seq(0.0,1.0,0.005)
plot(x, x**0.05, type = "l")
x <- seq(0.0,1.0,0.005)
plot(x, x**0.001, type = "l")
plot(x, x**0.02, type = "l")
plot(x, x**0.01, type = "l")
plot(x, x**0.1, type = "l")
plot(x, x**0.2, type = "l")
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.2
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
data <- faceColorData
color <- hsv()
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,9900,100)) {
plotFaceColorData(faceColorData, i)
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.2
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- cbind(col1, col2, faceColorData$faceIdx)
View(projectedColorData)
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.2
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- cbind(col1, col2, faceColorData$faceIdx)
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.2
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- cbind(col1, col2, faceColorData$faceIdx)
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,9900,100)) {
plotFaceColorData(projectedColorData, i)
}
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.2
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data$H[faceRows], data$S[faceRows], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,9900,100)) {
plotFaceColorData(projectedColorData, i)
}
View(projectedColorData)
plot(projectedColorData$proj1[faceRows], projectedColorData$proj2[faceRows])
faceRows <- which(projectedColorData$faceIdx == 0)
plot(projectedColorData$proj1[faceRows], projectedColorData$proj2[faceRows])
library("readr")
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H / 360
faceColorData$H <- faceColorData$H * faceColorData$S**0.2
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
for (i in seq(0,9900,100)) {
plotFaceColorData(projectedColorData, i)
}
plotFaceColorData(projectedColorData, 0)
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(projectedColorData, 0)
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(projectedColorData, 100)
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(projectedColorData, 2000)
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(projectedColorData, 20000)
plot(NULL, xlim=c(0,1), ylim=c(0,1), xlab = "H", ylab = "S")
plotFaceColorData(projectedColorData, 4000)
apply(1:100, 1, print)
sapply(1:100, print)
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 - (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
distFunc(c(0.5,1.0),c(0.5,0.0))
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 - (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
distFunc(c(0.5,1.0),c(0.5,0.0))
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
distFunc(c(0.5,1.0),c(0.5,0.0))
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
distFunc(c(0.5,1.0),c(0.5,1.0))
cos(3.14159264)
cos(3.14159264*2.0)
pi
pi <- 3.14159264
360/180
*pi
2*pi
library("readr")
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
library("readr")
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
distFunc(c(0.5,1.0),c(0.5,1.0))
plot(density(faceColorData$H))
plot(density(faceColorData$H, 0.1))
plot(density(faceColorData$H, 0.01))
faceRows <- which(faceColorData$faceIdx == 0)
faceRows <- which(faceColorData$faceIdx == 100)
faceRows <- which(faceColorData$faceIdx == 1000)
face1Idx <- 1000
face2Idx <- 2000
face1Rows <- which(faceColorData$faceIdx == face1Idx)
face2Rows <- which(faceColorData$faceIdx == face2Idx)
face1Idx <- 1000
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
face1Data <- faceColorData[face1RowsIdx,]
View(face1Data)
face1Idx <- 1000
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
face1Data <- faceColorData[face1RowsIdx,]
face2Data <- faceColorData[face2RowsIdx,]
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
face1Idx <- 1000
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
face1Data <- faceColorData[face1RowsIdx,]
face2Data <- faceColorData[face2RowsIdx,]
lapply(face1RowsIdx, print)
sapply(face1RowsIdx, print)
sapply(face1RowsIdx, function(a) {print(a)})
sapply(face1RowsIdx, function(a) {print(faceColorData[a,])})
sapply(face1RowsIdx, function(face1Idx) {print(faceColorData[face1Idx,])})
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
face1Idx <- 1000
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
sapply(face1RowsIdx, function(face1Idx) {print(faceColorData[face1Idx,])})
library("readr")
plotFaceColorData <- function(data, faceIdx) {
faceRows <- which(data$faceIdx == faceIdx)
lines(data[faceRows,1], data[faceRows,2], type = "p", col = hsv(faceIdx/max(data$faceIdx)))
}
distFunc <- function(col1, col2) {
(cos(col1[1]) * col1[2] - cos(col2[1]) * col2[2])^2 + (sin(col1[1]) * col1[2] - sin(col2[1]) * col2[2])^2
}
pi <- 3.14159264
faceColorData <- read_csv("/home/home/thefamousrat/facePixels.csv")
faceColorData$H <- faceColorData$H * (pi/180)
col1 <- sin(faceColorData$H) * faceColorData$S
col2 <- cos(faceColorData$H) * faceColorData$S
projectedColorData <- as.data.frame(cbind(col1, col2, faceColorData$faceIdx))
colnames(projectedColorData) <- c("proj1", "proj2", "faceIdx")
face1Idx <- 1000
face2Idx <- 2000
face1RowsIdx <- which(faceColorData$faceIdx == face1Idx)
face2RowsIdx <- which(faceColorData$faceIdx == face2Idx)
sapply(face1RowsIdx, function(face1Idx) {print(faceColorData[face1Idx,])})
sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[2095,]
distFunc(face1Data, face2Data)
})
min(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[2095,]
distFunc(face1Data, face2Data)
}))
unlist(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[2095,]
distFunc(face1Data, face2Data)
}))
min(unlist(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[2095,]
distFunc(face1Data, face2Data)
})))
sapply(face2RowsIdx, function (face2Idx) {
min(unlist(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[face2Idx,]
distFunc(face1Data, face2Data)
})))
})
sapply(face1RowsIdx, function (face1Idx) {
min(unlist(sapply(face2RowsIdx, function(face2Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[face2Idx,]
distFunc(face1Data, face2Data)
})))
})
mean(sapply(face1RowsIdx, function (face1Idx) {
min(unlist(sapply(face2RowsIdx, function(face2Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[face2Idx,]
distFunc(face1Data, face2Data)
})))
}))
mean(sapply(face2RowsIdx, function (face2Idx) {
min(unlist(sapply(face1RowsIdx, function(face1Idx) {
face1Data <- faceColorData[face1Idx,]
face2Data <- faceColorData[face2Idx,]
distFunc(face1Data, face2Data)
})))
}))
plot(projectedColorData$proj1, projectedColorData$proj2)
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900))
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900, type = 'l'))
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "l")
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "l")
?plot
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "s")
?plot
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "S")
plot(projectedColorData$proj1, projectedColorData$proj2, col = hsv(projectedColorData$faceIdx / 9900), type = "p")
